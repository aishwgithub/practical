#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

void bubble_sort(int arr[], int n) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    int arr[10], n, i;
    pid_t pid;

    printf("Enter the number of integers: ");
    scanf("%d", &n);
    
    printf("Enter the integers: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    pid = fork();  // Create child process

    if (pid == 0) {  // Child process
        printf("Child process sorting.\n");
        bubble_sort(arr, n);
        printf("Sorted array in child: ");
        for (i = 0; i < n; i++) {
            printf("%d ", arr[i]);
        }
        printf("\n");
        exit(0);  // Child process exits
    } 
    else if (pid > 0) {  // Parent process
        wait(NULL);  // Parent waits for child to finish
        printf("Parent process finished waiting.\n");
        printf("Parent process sorting .\n");
        bubble_sort(arr, n);
        printf("Sorted array in parent: ");
        for (i = 0; i < n; i++) {
            printf("%d ", arr[i]);
        }
        printf("\n");
    }
    else {
        printf("Fork failed!\n");
        exit(1);
    }

    return 0;
}
