#include <stdio.h>

int main() {
    int n, time = 0, completed = 0, minBurst, shortest = -1;
    float total_wait_time = 0, total_turnaround_time = 0;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    int at[n], bt[n], rt[n], ct[n], wt[n], tat[n];

    for (int i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
        rt[i] = bt[i];
    }

    while (completed != n) {
        minBurst = 9999;
        shortest = -1;
        for (int i = 0; i < n; i++) {
            if (at[i] <= time && rt[i] > 0 && (shortest == -1 || rt[i] < rt[shortest])) {
                shortest = i;
            }
        }

        if (shortest == -1) {
            time++;
            continue;
        }

        rt[shortest]--;
        if (rt[shortest] == 0) {
            completed++;
            ct[shortest] = time + 1;
            tat[shortest] = ct[shortest] - at[shortest];
            wt[shortest] = tat[shortest] - bt[shortest];
            total_wait_time += wt[shortest];
            total_turnaround_time += tat[shortest];
        }
        time++;
    }

    // Display Completion times
    printf("SJF Preemptive Completion Times:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: Completion Time = %d\n", i + 1, ct[i]);
    }

    // Display average times
    printf("Average Waiting Time: %.2f\n", total_wait_time / n);
    printf("Average Turnaround Time: %.2f\n", total_turnaround_time / n);

    return 0;
}
